{"bodyText": "[](https://e2b.dev/)\n###### [Docs](https://e2b.dev/docs?ref=header)\n###### [Changelog](https://e2b.dev/changelog)\n###### [Blog](https://e2b.dev/blog)\n###### [Discord](https://discord.gg/U7KEcGErtQ)\nInsights\nFeb 16, 2024\nTereza Tizkova\n# CrewAI vs AutoGen for Code Execution AI Agents\nA new paper[ More Agents Is All You Need](https://arxiv.org/abs/2402.05120) finds that, simply via a sampling-and-voting method, the performance of LLMs scales with the number of agents instantiated. This can imply that the popularity of multi-agent frameworks is justified.\nCrewAI, also[ called AutoGen 2.0](https://www.toolify.ai/ai-news/developing-autonomous-ai-agents-with-crewai-autogen-20-installation-guide-541783), is a recently popular multi-agent framework. I tested CrewAI and compared it to AutoGen, mainly regarding the LLM-generated code execution capabilities.\n[](https://star-history.com/#joaomdmoura/crewAI&microsoft/autogen&Date)\n[GitHub stars rating evolution of AutoGen and CrewAI](https://star-history.com/#joaomdmoura/crewAI&microsoft/autogen&Date)\n  \n\nCrewAI is built on top of LangChain and allows one to orchestrate multiple agents working on a user-defined task.\nSame as[ AutoGen](https://microsoft.github.io/autogen/docs/Use-Cases/agent_chat/), CrewAI is open-source and uses the concept of agents with different roles, but on top of that, CrewAI allows agents to delegate work to each other.\n[](https://github.com/joaomdmoura/crewai)\nWorking model of CrewAI agents. [Source](https://github.com/joaomdmoura/crewai)\n## Why the hype?\nThere are several explanations for CrewAI's popularity. It is quick to set up, and works well for a variety of interesting use cases with clear guides and demos, e.g.:\n  * [Stock Analysis](https://github.com/joaomdmoura/crewAI-examples/tree/main/stock_analysis)\n  * [Creating Instagram posts](https://www.youtube.com/watch?v=NY97B2jDCo8&ab_channel=MervinPraison)\n  * [Trip Planner](https://github.com/joaomdmoura/crewAI-examples/tree/main/trip_planner)\n  * [Landing Page Generator.](https://github.com/joaomdmoura/crewAI-examples/tree/main/landing_page_generator)\n\n\n## Code execution comparison\n#### AutoGen\nWhat I like about AutoGen is that it is[ execution-capable](https://microsoft.github.io/autogen/docs/FAQ/#code-execution) of the code output it produces. That is, when I wanted to analyze and visualize a dataset, AutoGen agents generated a code for it, executed the code via Docker, and saved the resulting chart as a PDF file on my computer.\n[](https://e2b.dev/blog/microsoft-s-autogen)\n[AutoGen code execution feature used for generating a chart for stock prices](https://e2b.dev/blog/microsoft-s-autogen)\n  \n\nBy default, AutoGen[ currently uses](https://microsoft.github.io/autogen/blog/2024/01/23/Code-execution-in-docker/) Docker containers to execute Python code. They even[ added a Code Interpreter example](https://microsoft.github.io/autogen/blog/2023/11/13/OAI-assistants/) made with a new (experimental) agent called the GPTAssistantAgent that lets you add the new OpenAI assistants into AutoGen-based workflows.\nExecuting LLM-generated code locally via Docker may be limiting o for some use cases and possesses some risks, but there exists a cloud alternative. In this [open-source code interpreter example](https://github.com/e2b-dev/e2b-cookbook/tree/main/examples/e2b_autogen), the code produced by AutoGen agents is running in an isolated cloud environment.  \n  \n\n#### CrewAI\nWhen asked for similar data analysis tasks, CrewAI by default generates a text report. It works well with search tools like[ LangChain DuckDuckGo Search](https://python.langchain.com/docs/integrations/tools/ddg), but to perform more complex data analysis tasks, it would need tools that allow code execution of the LLM-generated code.\nExample of a stock analysis task performed by CrewAI.[ Source](https://youtu.be/_Gwv0Lhyu3Y)\n  \n\nAnother example of CrewAI performing a stock analysis task. [Source](https://www.youtube.com/watch?v=e0Uj4yWdaAg&ab_channel=BuildNewThings)\n  \n\nI haven\u2019t found a quick way to add such tools, but it still should be possible to integrate them. In some examples, like[ generating a landing page](https://github.com/joaomdmoura/crewAI-examples/tree/main/landing_page_generator), CrewAI uses other (custom) tools, like writing a new file with content.\n[Source](https://github.com/joaomdmoura/crewAI-examples/blob/main/landing_page_generator/tools/file_tools.py)\n#### LangChain tools for code execution\nLang Chain offers several[ Tools](https://python.langchain.com/docs/modules/agents/tools/) where LLM-generated code gets automatically executed.\nOne example is the[ Pandas Dataframe](https://python.langchain.com/docs/integrations/toolkits/pandas) where a Python agent is used to execute the LLM-generated Python code.\nAnother example is[ Python REPL](https://python.langchain.com/docs/integrations/tools/python) which can execute Python commands.\nThere is even one Langchain tool for remote code execution.[ Bearly Code Interpreter](https://python.langchain.com/docs/integrations/tools/bearly) allows safe LLM code execution by evaluating Python code in a sandbox environment. This environment resets on every execution.\nApart from these, users can even build their[ custom Langchain tools](https://python.langchain.com/docs/modules/agents/tools/custom_tools) for code execution and add them to CrewAI.\nIn conclusion, LangChain tools are able to execute code snippets for example via the Python runtime environment.\n#### Limitations\nRunning LLM-generated code can pose a security risk in general. Either because a user asks the LLM to generate malicious code or the LLM generates malicious code accidentally.\nEven the official LangChain tool Pandas Dataframe explicitly mentions \u201cThis can be bad if the LLM generated Python code is harmful. Use cautiously.\u201d\n[](https://python.langchain.com/docs/integrations/toolkits/pandas)\n[Source](https://python.langchain.com/docs/integrations/toolkits/pandas)\n  \n\n[](https://python.langchain.com/docs/integrations/tools/python)\n[Source](https://python.langchain.com/docs/integrations/tools/python)\n  \n\nLangChain recently[ received feedback](https://github.com/langchain-ai/langchain/discussions/16572) to add a more secure way of running the LLM-generated code, e.g., the same way AutoGen does.\n## Conclusion\nI can understand the popularity of both AutoGen and CrewAI as they have proven the ability to deliver some interesting and useful examples quickly. While CrewAI is younger than AutoGen, it would be cool to see benchmarks and evals from both frameworks to make it easier for developers to make the right decision when deciding.\nI heard from some developers that they chose CrewAI because they were already familiar with LangChain, and others argued that AutoGen is more customizable. However, when discussing with developers, most said that they don\u2019t see a big difference between CrewAI and AutoGen as they accomplish similar tasks.\nE2B\nE2B is building the cloud for AI agents. \nA platform and infrastructure where AI agents can act autonomously and as the first class citizen.\nBy E2B\n[Map of AI Agents](https://github.com/e2b-dev/awesome-ai-agents/)\n[Map of Agents' SDKs](https://github.com/e2b-dev/awesome-sdks-for-ai-agents)\n[ChatGPT Plugin](https://github.com/e2b-dev/chatgpt-plugin)\n[Agent Protocol](https://github.com/e2b-dev/agent-protocol)\n[Smol Developer in Cloud](https://app.e2b.dev/agent/smol-developer)\nLinks\n[GitHub](http://github.com/e2b-dev)\n[Twitter](https://twitter.com/e2b_dev)\n[Discord](https://discord.gg/U7KEcGErtQ)\n[LinkedIn](https://www.linkedin.com/company/e2b-dev)\nCompany\n[Contact](mailto:hello@e2b.dev)\n[Blog](https://www.blog.e2b.dev/)\n[Changelog](https://www.changelog.e2b.dev/)\n\u00a92023 FoundryLabs, Inc. All rights reserved.\n", "pageTitle": "CrewAI vs AutoGen for Code Execution AI Agents", "metaTitle": "CrewAI vs AutoGen for Code Execution AI Agents", "metaDescription": "I tested CrewAI and compared it with AutoGen, mainly regarding the LLM-generated code execution capabilities.", "metaImageUrl": "https://framerusercontent.com/images/VTTFemU8s24mFCNFCrQc6ahwKBI.png", "faviconImageUrl": "https://e2b.dev/blog/crewai-vs-autogen-for-code-execution-ai-agentshttps://framerusercontent.com/images/D3wW7t1ncG5jXkDa5Qx55CT1Pco.png", "url": "https://e2b.dev/blog/crewai-vs-autogen-for-code-execution-ai-agents"}