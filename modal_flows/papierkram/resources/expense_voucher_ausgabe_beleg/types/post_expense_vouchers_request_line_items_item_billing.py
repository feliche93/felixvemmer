# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .post_expense_vouchers_request_line_items_item_billing_invoice import (
    PostExpenseVouchersRequestLineItemsItemBillingInvoice,
)
from .post_expense_vouchers_request_line_items_item_billing_project import (
    PostExpenseVouchersRequestLineItemsItemBillingProject,
)

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class PostExpenseVouchersRequestLineItemsItemBilling(pydantic.BaseModel):
    amount: typing.Optional[float]
    vat_rate: typing.Optional[str]
    invoice: typing.Optional[PostExpenseVouchersRequestLineItemsItemBillingInvoice]
    project: typing.Optional[PostExpenseVouchersRequestLineItemsItemBillingProject]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
